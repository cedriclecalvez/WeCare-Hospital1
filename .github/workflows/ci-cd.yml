# This is a basic workflow to help you get started with Actions


name: CI-CD - Unit & Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ 7_CI_CD ]
  pull_request:
    types: [review_requested, opened, reopened, synchronize]
    branches:
    - 7_CI_CD

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      APP_PORT: 3050
      JWT_SECRET: toto000
      TYPEORM_CONNECTION: mysql
      TYPEORM_HOST: localhost
      TYPEORM_USERNAME: root
      TYPEORM_PASSWORD: root
      TYPEORM_DATABASE: hospitalSequelize
      TYPEORM_PORT: 3306
      TYPEORM_SYNCHRONIZE: true
      TYPEORM_LOGGING: false
      TYPEORM_MIGRATIONS_RUN: false
      TYPEORM_ENTITIES: src/modules/**/entity.ts
      
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: start mysql service
      run: |
          sudo /lib/systemd/systemd-sysv-install enable mysql
          sudo systemctl enable mysql.service
          sudo systemctl start mysql.service
          sudo systemctl status mysql.service
          sudo mysql --host 127.0.0.1 --port 3306 -uroot -proot -e "CREATE DATABASE hospitalSequelize"
          
    - name: Install node
      uses: actions/setup-node@v2
      with:
        node-version: 16.x

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test

# CD --- deploy  
  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install nodeJS
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Install ssh key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just a placeholder'

      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy app on VPS
        run: rsync -avz ./build ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST}}:/var/www/html/WeCare-Hospital1